# -*- coding: utf-8 -*-
"""Flights analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19x4702mg7-6Y11XADOS6PSMLUtapJBG5
"""

#mounting drive
from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import ipywidgets as widgets
from ipywidgets import interact

# Set a consistent color palette
sns.set_palette("Set2")
palette = sns.color_palette("Set2")

df = pd.read_csv('/content/sample_data/flights_dataset.csv')
df

# prompt: remove unnamed column

df = df.loc[:, ~df.columns.str.contains('^Unnamed')]
df

#rename columns for readability
df.rename(columns={
    'year': 'Flight_Year',
    'month': 'Flight_Month',
    'carrier': 'Carrier_Code',
    'carrier_name': 'Carrier_Name',
    'airport': 'Airport_Code',
    'airport_name': 'Airport_Name',
    'arr_flights': 'OnTime_Arrivals',
    'arr_del15': 'Delayed_Arrivals_15MinPlus',
    'arr_cancelled': 'Cancelled_Flights',
    'arr_diverted': 'Diverted_Flights',
    'arr_delay': 'Total_Delayed_Flights',
    'carrier_delay': 'Carrier_Caused_Delays',
    'weather_delay': 'Weather_Caused_Delays',
    'nas_delay': 'NAS_Caused_Delays',  # Or 'National_Airspace_System_Delays'
    'security_delay': 'Security_Caused_Delays'
}, inplace=True)

# Display the renamed DataFrame
print(df.head())

# Top Airlines by On-Time Performance
df['OnTime_Percentage'] = (df['OnTime_Arrivals'] / (df['OnTime_Arrivals'] + df['Delayed_Arrivals_15MinPlus'])) * 100
airline_performance = df.groupby('Carrier_Name')['OnTime_Percentage'].mean().sort_values(ascending=False).reset_index()
airline_performance.plot(kind='bar', x='Carrier_Name', y='OnTime_Percentage', figsize=(12, 6), color=palette[0])
plt.title('Top Airlines by On-Time Performance')
plt.xlabel('Airline')
plt.ylabel('On-Time Performance (%)')
plt.show()

#Monthly Trends in Flight Cancellations and Diversions
# Group by Flight_Month and sum cancellations and diversions
monthly_cancellations_diversions = df.groupby('Flight_Month').agg({
    'Cancelled_Flights': 'sum',
    'Diverted_Flights': 'sum'
}).reset_index()

# Plotting
monthly_cancellations_diversions.plot(kind='line', x='Flight_Month', figsize=(12, 6), marker='o')
plt.title('Monthly Trends in Flight Cancellations and Diversions')
plt.xlabel('Month')
plt.ylabel('Number of Flights')
plt.grid(True)
plt.show()

df

# Airports with the most delays
# Group by Airport_Name and sum delays
airport_delays = df.groupby('Airport_Name')['Total_Delayed_Flights'].sum().sort_values(ascending=False).reset_index()

# Plotting the top 10 airports with the most delays
airport_delays.head(10).plot(kind='bar', x='Airport_Name', y='Total_Delayed_Flights', figsize=(12, 6), color=palette)
plt.title('Top 10 Airports with the Most Delays')
plt.xlabel('Airport')
plt.ylabel('Total Delays')
plt.show()

# Impact of Weather on Delays by Region
# Group by Airport_Name and sum weather delays
weather_delays_by_region = df.groupby('Airport_Name')['Weather_Caused_Delays'].sum().sort_values(ascending=False).reset_index()

# Plotting the top 10 airports with the most weather delays
weather_delays_by_region.head(10).plot(kind='bar', x='Airport_Name', y='Weather_Caused_Delays', figsize=(12, 6), color=palette)
plt.title('Top 10 Airports with the Most Weather-Caused Delays')
plt.xlabel('Airport')
plt.ylabel('Weather-Caused Delays')
plt.show()

# Heatmap of Delay Causes by Month
import seaborn as sns

# Group by month and sum delays by cause
delays_by_month = df.groupby('Flight_Month').agg({
    'Carrier_Caused_Delays': 'sum',
    'Weather_Caused_Delays': 'sum',
    'NAS_Caused_Delays': 'sum',
    'Security_Caused_Delays': 'sum'
}).reset_index()

# Set the month as the index for better heatmap plotting
delays_by_month.set_index('Flight_Month', inplace=True)

# Plotting the heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(delays_by_month, annot=True, cmap=palette, fmt='.0f')
plt.title('Heatmap of Delay Causes by Month')
plt.xlabel('Delay Cause')
plt.ylabel('Month')
plt.show()